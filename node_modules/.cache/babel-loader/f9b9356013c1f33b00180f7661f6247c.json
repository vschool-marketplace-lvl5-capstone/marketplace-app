{"ast":null,"code":"import _slicedToArray from \"/Users/blairrobbins/Desktop/group-projects/marketplace-app/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/blairrobbins/Desktop/group-projects/marketplace-app/client/src/components/navbar/Navbar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GiHamburgerMenu } from 'react-icons/gi';\nimport './Navbar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Navbar() {\n  _s();\n\n  // state from the background color and responsive drop down\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      scrolled = _useState2[0],\n      setScroll = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDropped = _useState4[0],\n      setDrop = _useState4[1]; // sets state based on scroll\n\n\n  function changeBackground() {\n    if (window.scrollY >= 50) {\n      setScroll(true);\n    } else {\n      setScroll(false);\n    }\n  } // event listener for scroll\n\n\n  window.addEventListener('scroll', changeBackground); // dropDown activated\n\n  function dropDown() {\n    setDrop(function (prevState) {\n      return !prevState;\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"navbar\",\n    className: scrolled ? 'scroll' : '',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"navbarTitle\",\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#header\",\n        children: \"Odd Jobs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: isDropped === false ? 'navbarLinks' : 'droppedOptions',\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"dropper\",\n        onClick: dropDown,\n        children: /*#__PURE__*/_jsxDEV(GiHamburgerMenu, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#header\",\n        children: \"All Listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#projects\",\n        children: \"My Listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#contact\",\n        children: \"Saved Listings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"#aboutMe\",\n        children: \"About us\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Navbar, \"vklHXRljq3wwYWwy0CHnQRFW8Ro=\");\n\n_c = Navbar;\nexport default Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/Users/blairrobbins/Desktop/group-projects/marketplace-app/client/src/components/navbar/Navbar.js"],"names":["React","useState","GiHamburgerMenu","Navbar","scrolled","setScroll","isDropped","setDrop","changeBackground","window","scrollY","addEventListener","dropDown","prevState"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gBAAhC;AACA,OAAO,cAAP;;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AACd;AADc,kBAEgBF,QAAQ,CAAC,KAAD,CAFxB;AAAA;AAAA,MAEPG,QAFO;AAAA,MAEGC,SAFH;;AAAA,mBAGeJ,QAAQ,CAAC,KAAD,CAHvB;AAAA;AAAA,MAGPK,SAHO;AAAA,MAGIC,OAHJ,kBAKd;;;AACA,WAASC,gBAAT,GAA4B;AACxB,QAAIC,MAAM,CAACC,OAAP,IAAkB,EAAtB,EAA0B;AACtBL,MAAAA,SAAS,CAAC,IAAD,CAAT;AACH,KAFD,MAEO;AACHA,MAAAA,SAAS,CAAC,KAAD,CAAT;AACH;AACJ,GAZa,CAcd;;;AACAI,EAAAA,MAAM,CAACE,gBAAP,CAAwB,QAAxB,EAAkCH,gBAAlC,EAfc,CAiBd;;AACA,WAASI,QAAT,GAAoB;AAChBL,IAAAA,OAAO,CAAC,UAAAM,SAAS;AAAA,aAAI,CAACA,SAAL;AAAA,KAAV,CAAP;AACH;;AAED,sBACI;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,SAAS,EAAET,QAAQ,GAAG,QAAH,GAAc,EAAlD;AAAA,4BACI;AAAK,MAAA,EAAE,EAAC,aAAR;AAAA,6BACI;AAAG,QAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAEE,SAAS,KAAK,KAAd,GAAsB,aAAtB,GAAsC,gBAAtD;AAAA,8BACI;AAAK,QAAA,EAAE,EAAC,SAAR;AAAkB,QAAA,OAAO,EAAEM,QAA3B;AAAA,+BACI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAG,QAAA,IAAI,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAG,QAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAG,QAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAG,QAAA,IAAI,EAAC,UAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH;;GAtCQT,M;;KAAAA,M;AAwCT,eAAeA,MAAf","sourcesContent":["import React, { useState } from 'react'\nimport { GiHamburgerMenu } from 'react-icons/gi'\nimport './Navbar.css'\n\nfunction Navbar() {\n    // state from the background color and responsive drop down\n    const [scrolled, setScroll] = useState(false)\n    const [isDropped, setDrop] = useState(false)\n\n    // sets state based on scroll\n    function changeBackground() {\n        if (window.scrollY >= 50) {\n            setScroll(true)\n        } else {\n            setScroll(false)\n        }\n    }\n\n    // event listener for scroll\n    window.addEventListener('scroll', changeBackground)\n\n    // dropDown activated\n    function dropDown() {\n        setDrop(prevState => !prevState)\n    }\n\n    return (\n        <div id='navbar' className={scrolled ? 'scroll' : ''}>\n            <div id='navbarTitle'>\n                <a href='#header'>Odd Jobs</a>\n            </div>\n            <div className={isDropped === false ? 'navbarLinks' : 'droppedOptions'}>\n                <div id='dropper' onClick={dropDown}>\n                    <GiHamburgerMenu />\n                </div>\n                <a href='#header'>All Listings</a>\n                <a href='#projects'>My Listings</a>\n                <a href='#contact'>Saved Listings</a>\n                <a href='#aboutMe'>About us</a>\n            </div>\n        </div>\n    )\n}\n\nexport default Navbar"]},"metadata":{},"sourceType":"module"}